on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  Build-Code:
    name: Building the Complete Code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build and push the Docker image
      run:  |
        echo "${{ secrets.Dockerhubpw }}" | docker login  -u "neeleshdeva"  --password-stdin 
        docker image build -t neeleshdeva/githubimagepush:01v1 .
        docker push neeleshdeva/githubimagepush:01v1
              
      
  Release-Projects:
    name: Create Release
    runs-on: ubuntu-latest
    needs: Build-Code
    steps:
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
      - name:  Upload Release Assert
        uses: actions/upload-release-assert@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
         upload_url: ${{ steps.cretate_release.outputs.upload_url }} #This pull from the create release
         asset_path: ./my-artifact.zip
         assert_name: my-artifact.zip
         assert_content_type: application/zip
      
      
      
      
      
